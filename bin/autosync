#!/usr/bin/env ruby
require 'trollop'

# Setup options
opts = Trollop::options do
  opt :dir, "Directory to watch", :type => String, :required => true 
  opt :verbose, "Show verbose output", :default => false
  opt :frequency, "Frequency to run", :default => 10
  opt :growl, "Remote growl notifications [alpha]", :type => String 
end

verbose = "Git sync started..."
puts verbose if opts[:verbose]
%x(ssh #{opts[:growl]} 'growl -m "#{verbose}" -t "Gitsync"') if opts[:growl]

dir = opts[:dir]

while true
  curr = %x(du -s #{dir} | awk '{print $1}').chomp
  prev = curr

  while curr == prev
    #puts "No change, waiting #{opts[:frequency]} seconds" if opts[:verbose]
    sleep opts[:frequency].to_i
    curr = %x(du -s #{dir} | awk '{print $1}').chomp
  end

  sleep 1
  orig = %x(du -s #{dir} | awk '{print $1}').chomp
  while curr != orig
    orig = %x(du -s #{dir} | awk '{print $1}').chomp
    puts "File being written. Waiting..." if opts[:verbose]
    sleep 4
    curr = %x(du -s #{dir} | awk '{print $1}').chomp
  end
  
  verbose = "Adding files..."
  puts verbose if opts[:verbose]
  %x(ssh #{opts[:growl]} 'growl -m "#{verbose}" -t "Gitsync"') if opts[:growl]
  
  msg = `cd #{dir} && git status --porcelain`
  %x(cd #{dir} && git add -A)
  %x(cd #{dir} && git commit -qm "#{msg}")

  verbose = "#{Time.now.strftime("%Y-%m-%d %H:%M:%S")} Committed"
  puts verbose if opts[:verbose]
  %x(ssh #{opts[:growl]} 'growl -m "#{verbose}" -t "Gitsync"') if opts[:growl]
  
  puts "Watching for change..." if opts[:verbose]
end