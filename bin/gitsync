#!/usr/bin/env ruby
require 'rubygems'
require 'trollop'

# Setup options
opts = Trollop::options do
  opt :dir, "Directory to watch", :type => String, :required => true 
  opt :debug, "Show debug output", :default => false
  opt :interactive, "Interactive", :default => false
  opt :pull, "git pull", :default => false
end

puts "Git sync started..." if opts[:debug]

dir = opts[:dir]

# Current status
go = "cd #{dir} &&"
status = %x(#{go} git status --porcelain).split("\n")
untracked = %x(#{go} git ls-files -o -X .gitignore).split("\n")
 
if opts[:pull] 
  output = %x(#{go} git pull)
  puts output
  exit
end


# Current working size
orig_size = %x(du -s #{dir} | awk '{print $1}').chomp

# Write protection
sleep 1
curr_size = %x(du -s #{dir} | awk '{print $1}').chomp
while curr_size != orig_size
  orig = %x(du -s #{dir} | awk '{print $1}').chomp
  puts "Might be writing: orig: #{orig_size}, curr: #{curr_size}" if opts[:debug]
  sleep 3
  curr_size = %x(du -s #{dir} | awk '{print $1}').chomp
end

# Git
unless status.empty?
  # Add all files
  if opts[:interactive]
    print "\nAdd these files to staging?\n#{status.join("\n")}?\n[yn] "
    response = $stdin.gets.chomp
    exit if response == "n"
  end
  %x(cd #{dir} && git add -A)
   
  # Check to see what's been staged
  staged = %x(#{go} git ls-files).split("\n")
  porcelain = %x(#{go} git status --porcelain).split("\n")
  
  # Commit!
  if opts[:interactive]
    print "\nCommit #{s = staged.join(", ")}? [yn] "
    response == $stdin.gets.chomp
    exit if response == "n"
  end
  %x(cd #{dir} && git commit -qm "#{porcelain.join("\n")}")
  puts "#{Time.now.strftime("%Y-%m-%d %H:%M:%S")} #{staged.join(", ")}" if opts[:debug]
else
  puts "Nothing to commit." if opts[:debug]
end
